// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String    @unique
  password     String
  profileImage String?
  role         Role      @default(USER)
  createdAt    DateTime  @default(now()) @db.Timestamp(0)
  updatedAt    DateTime  @updatedAt @db.Timestamp(0)
  posts        Post[]
  comments     Comment[]
}

enum Role {
  USER
  ADMIN
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String    @db.Text
  detail     String    @db.Text
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @updatedAt @db.Timestamp(0)
  lat        Float
  lng        Float
  district   String?
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  comments   Comment[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  comment   String   @db.Text
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
